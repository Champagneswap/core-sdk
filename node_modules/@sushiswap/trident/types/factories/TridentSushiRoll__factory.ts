/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TridentSushiRoll,
  TridentSushiRollInterface,
} from "../TridentSushiRoll";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xdb9039b9",
        type: "bytes32",
      },
    ],
    name: "c_0xdb9039b9",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060dc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80631209ed5814602d575b600080fd5b60436004803603810190603f9190605b565b6045565b005b50565b6000813590506055816092565b92915050565b600060208284031215606e57606d608d565b5b6000607a848285016048565b91505092915050565b6000819050919050565b600080fd5b6099816083565b811460a357600080fd5b5056fea2646970667358221220922945d688bb6a1c27a099aeaf81d1ac92b25cccb74aab2214f980e5611a920864736f6c63430008070033";

export class TridentSushiRoll__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TridentSushiRoll> {
    return super.deploy(overrides || {}) as Promise<TridentSushiRoll>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TridentSushiRoll {
    return super.attach(address) as TridentSushiRoll;
  }
  connect(signer: Signer): TridentSushiRoll__factory {
    return super.connect(signer) as TridentSushiRoll__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TridentSushiRollInterface {
    return new utils.Interface(_abi) as TridentSushiRollInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TridentSushiRoll {
    return new Contract(address, _abi, signerOrProvider) as TridentSushiRoll;
  }
}
