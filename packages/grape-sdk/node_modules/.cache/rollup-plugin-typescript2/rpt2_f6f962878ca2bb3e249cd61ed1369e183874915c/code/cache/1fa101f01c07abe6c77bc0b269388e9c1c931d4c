{"code":"import { FACTOR_PRECISION, FULL_UTILIZATION_MINUS_MAX, INTEREST_ELASTICITY, MAXIMUM_INTEREST_PER_YEAR, MAXIMUM_TARGET_UTILIZATION, MINIMUM_INTEREST_PER_YEAR, MINIMUM_TARGET_UTILIZATION, PROTOCOL_FEE, PROTOCOL_FEE_DIVISOR, STARTING_INTEREST_PER_YEAR, } from '../constants';\r\nimport { BigNumber } from '@ethersproject/bignumber';\r\nimport { ZERO, JSBI } from '@champagneswap/core-sdk';\r\nexport function accrue(pair, amount, includePrincipal = false) {\r\n    return JSBI.add(JSBI.divide(JSBI.multiply(JSBI.multiply(amount, pair.accrueInfo.interestPerSecond), pair.elapsedSeconds), JSBI.BigInt(1e18)), includePrincipal ? amount : ZERO);\r\n}\r\nexport function accrueTotalAssetWithFee(pair) {\r\n    const extraAmount = JSBI.divide(JSBI.multiply(JSBI.multiply(pair.totalBorrow.elastic, pair.accrueInfo.interestPerSecond), JSBI.add(pair.elapsedSeconds, JSBI.BigInt(3600)) // For some transactions, to succeed in the next hour (and not only this block), some margin has to be added\r\n    ), JSBI.BigInt(1e18));\r\n    const feeAmount = JSBI.divide(JSBI.multiply(extraAmount, PROTOCOL_FEE), PROTOCOL_FEE_DIVISOR); // % of interest paid goes to fee\r\n    const feeFraction = JSBI.divide(JSBI.multiply(feeAmount, pair.totalAsset.base), pair.currentAllAssets);\r\n    return {\r\n        elastic: pair.totalAsset.elastic,\r\n        base: JSBI.add(pair.totalAsset.base, feeFraction),\r\n    };\r\n}\r\nexport function interestAccrue(pair, interest) {\r\n    if (JSBI.equal(pair.totalBorrow.base, ZERO)) {\r\n        return STARTING_INTEREST_PER_YEAR;\r\n    }\r\n    if (JSBI.lessThanOrEqual(pair.elapsedSeconds, ZERO)) {\r\n        return interest;\r\n    }\r\n    let currentInterest = interest;\r\n    if (JSBI.lessThan(pair.utilization, MINIMUM_TARGET_UTILIZATION)) {\r\n        const underFactor = JSBI.greaterThan(MINIMUM_TARGET_UTILIZATION, ZERO)\r\n            ? JSBI.divide(JSBI.multiply(JSBI.subtract(MINIMUM_TARGET_UTILIZATION, pair.utilization), FACTOR_PRECISION), MINIMUM_TARGET_UTILIZATION)\r\n            : ZERO;\r\n        const scale = JSBI.add(INTEREST_ELASTICITY, JSBI.multiply(JSBI.multiply(underFactor, underFactor), pair.elapsedSeconds));\r\n        currentInterest = JSBI.divide(JSBI.multiply(currentInterest, INTEREST_ELASTICITY), scale);\r\n        if (JSBI.lessThan(currentInterest, MINIMUM_INTEREST_PER_YEAR)) {\r\n            currentInterest = MINIMUM_INTEREST_PER_YEAR; // 0.25% APR minimum\r\n        }\r\n    }\r\n    else if (JSBI.greaterThan(pair.utilization, MAXIMUM_TARGET_UTILIZATION)) {\r\n        const overFactor = JSBI.multiply(JSBI.subtract(pair.utilization, MAXIMUM_TARGET_UTILIZATION), JSBI.divide(FACTOR_PRECISION, FULL_UTILIZATION_MINUS_MAX));\r\n        const scale = JSBI.add(INTEREST_ELASTICITY, JSBI.multiply(JSBI.multiply(overFactor, overFactor), pair.elapsedSeconds));\r\n        currentInterest = JSBI.divide(JSBI.multiply(currentInterest, scale), INTEREST_ELASTICITY);\r\n        if (JSBI.greaterThan(currentInterest, MAXIMUM_INTEREST_PER_YEAR)) {\r\n            currentInterest = MAXIMUM_INTEREST_PER_YEAR; // 1000% APR maximum\r\n        }\r\n    }\r\n    return currentInterest;\r\n}\r\n// Subtract protocol fee\r\nexport function takeFee(amount) {\r\n    return JSBI.subtract(amount, JSBI.divide(JSBI.multiply(amount, PROTOCOL_FEE), PROTOCOL_FEE_DIVISOR));\r\n}\r\nexport function addBorrowFee(amount) {\r\n    return amount.mul(BigNumber.from(10005)).div(BigNumber.from(10000));\r\n}\r\nexport { computePairAddress } from './computePairAddress';\r\n//# sourceMappingURL=index.js.map","references":["/Users/jq/Dropbox/champagneswap-core-sdk/packages/grape-sdk/src/constants/index.ts","/Users/jq/Dropbox/champagneswap-core-sdk/node_modules/@ethersproject/bignumber/lib/index.d.ts","/Users/jq/Dropbox/champagneswap-core-sdk/packages/grape-sdk/src/entities/index.ts","/Users/jq/Dropbox/champagneswap-core-sdk/packages/core-sdk/dist/index.d.ts","/Users/jq/Dropbox/champagneswap-core-sdk/packages/grape-sdk/src/functions/computePairAddress.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/functions/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/jq/Dropbox/champagneswap-core-sdk/packages/grape-sdk/functions/index.d.ts","writeByteOrderMark":false,"text":"import { BigNumber } from '@ethersproject/bignumber';\r\nimport { KashiMediumRiskLendingPair } from '../entities';\r\nimport { JSBI } from '@champagneswap/core-sdk';\r\nexport declare function accrue(pair: KashiMediumRiskLendingPair, amount: JSBI, includePrincipal?: boolean): JSBI;\r\nexport declare function accrueTotalAssetWithFee(pair: KashiMediumRiskLendingPair): {\r\n    elastic: JSBI;\r\n    base: JSBI;\r\n};\r\nexport declare function interestAccrue(pair: KashiMediumRiskLendingPair, interest: JSBI): JSBI;\r\nexport declare function takeFee(amount: JSBI): JSBI;\r\nexport declare function addBorrowFee(amount: BigNumber): BigNumber;\r\nexport { computePairAddress } from './computePairAddress';\r\n"}}
